mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (amr_fullname = NA_character_) %>%
mutate (amr_phylum = NA_character_) %>%
mutate (amr_family = NA_character_) %>%
mutate (amr_pathogenicity = NA_character_) %>%
mutate (amr_gram_status = NA_character_) -> ninety
fifty %>% slice_head(n=10) -> fifty
seventy %>% slice_head(n=10) -> seventy
ninety %>% slice_head(n=10) -> ninety
# AMR loop for information about each bacterial species
to_run <- list(fifty, seventy, ninety)
for (set in to_run) {
# set progress bar information
pb <- winProgressBar(title = "AMR Loop Progress", # Window title
label = "Percentage completed", # Window label
min = 0,      # Minimum value of the bar
max = length(set$"taxid"), # Maximum value of the bar
initial = 0,  # Initial value of the bar
width = 300L) # Width of the window
for (i in 1:length(set$"taxid")) {
set[i, "amr_fullname"]      <- mo_fullname     (set[i, "genus_species"])
set[i, "amr_phylum"]        <- mo_phylum       (set[i, "genus_species"])
set[i, "amr_family"]        <- mo_family       (set[i, "genus_species"])
set[i, "amr_pathogenicity"] <- mo_pathogenicity(set[i, "genus_species"])
set[i, "amr_gram_status"]   <- mo_gramstain    (set[i, "genus_species"])
pctg <- paste(round(i/length(set$"taxid") *100, 0), "% completed")
setWinProgressBar(pb, i, label = pctg) # The label will override the label set on the winProgressBar function
}
close(pb) # Close the connection
}
View(fifty)
View(seventy)
View(ninety)
View(zero)
View(fifty)
View(zero)
View(fifty)
View(ninety)
to_run <- list(fifty, seventy, ninety)
for (df in 1:length(to_run)) {
# set progress bar information
pb <- winProgressBar(title = "AMR Loop Progress", # Window title
label = "Percentage completed", # Window label
min = 0,      # Minimum value of the bar
max = length(df$"taxid"), # Maximum value of the bar
initial = 0,  # Initial value of the bar
width = 300L) # Width of the window
for (i in 1:length(df$"taxid")) {
df[i, "amr_fullname"]      <- mo_fullname     (df[i, "genus_species"])
df[i, "amr_phylum"]        <- mo_phylum       (df[i, "genus_species"])
df[i, "amr_family"]        <- mo_family       (df[i, "genus_species"])
df[i, "amr_pathogenicity"] <- mo_pathogenicity(df[i, "genus_species"])
df[i, "amr_gram_status"]   <- mo_gramstain    (df[i, "genus_species"])
pctg <- paste(round(i/length(df$"taxid") *100, 0), "% completed")
setWinProgressBar(pb, i, label = pctg) # The label will override the label set on the winProgressBar function
}
close(pb) # Close the connection
}
# read in file with bacterial names
zero <- read_csv("0_percent.csv")
fifty <- read_csv("50_percent.csv")
seventy <- read_csv("70_percent.csv")
ninety <- read_csv("90_percent.csv")
# clean up genus/species column for running in AMR package
fifty %>%
select (-1) %>%
mutate (genus_species = str_replace(genus_species, ",", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\[", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (amr_fullname = NA_character_) %>%
mutate (amr_phylum = NA_character_) %>%
mutate (amr_family = NA_character_) %>%
mutate (amr_pathogenicity = NA_character_) %>%
mutate (amr_gram_status = NA_character_) -> fifty
seventy %>%
select (-1) %>%
mutate (genus_species = str_replace(genus_species, ",", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\[", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (amr_fullname = NA_character_) %>%
mutate (amr_phylum = NA_character_) %>%
mutate (amr_family = NA_character_) %>%
mutate (amr_pathogenicity = NA_character_) %>%
mutate (amr_gram_status = NA_character_) -> seventy
ninety %>%
select (-1) %>%
mutate (genus_species = str_replace(genus_species, ",", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\[", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (amr_fullname = NA_character_) %>%
mutate (amr_phylum = NA_character_) %>%
mutate (amr_family = NA_character_) %>%
mutate (amr_pathogenicity = NA_character_) %>%
mutate (amr_gram_status = NA_character_) -> ninety
fifty %>% slice_head(n=10) -> fifty
seventy %>% slice_head(n=10) -> seventy
ninety %>% slice_head(n=10) -> ninety
# AMR loop for information about each bacterial species
to_run <- list(fifty, seventy, ninety)
for (df in 1:length(to_run)) {
# set progress bar information
pb <- winProgressBar(title = "AMR Loop Progress", # Window title
label = "Percentage completed", # Window label
min = 0,      # Minimum value of the bar
max = length(df$"taxid"), # Maximum value of the bar
initial = 0,  # Initial value of the bar
width = 300L) # Width of the window
for (i in 1:length(df$"taxid")) {
df[i, "amr_fullname"]      <- mo_fullname     (df[i, "genus_species"])
df[i, "amr_phylum"]        <- mo_phylum       (df[i, "genus_species"])
df[i, "amr_family"]        <- mo_family       (df[i, "genus_species"])
df[i, "amr_pathogenicity"] <- mo_pathogenicity(df[i, "genus_species"])
df[i, "amr_gram_status"]   <- mo_gramstain    (df[i, "genus_species"])
pctg <- paste(round(i/length(df$"taxid") *100, 0), "% completed")
setWinProgressBar(pb, i, label = pctg) # The label will override the label set on the winProgressBar function
}
close(pb) # Close the connection
}
# AMR loop for information about each bacterial species
to_run <- list(fifty, seventy, ninety)
for (df in to_run) {
# set progress bar information
pb <- winProgressBar(title = "AMR Loop Progress", # Window title
label = "Percentage completed", # Window label
min = 0,      # Minimum value of the bar
max = length(df$"taxid"), # Maximum value of the bar
initial = 0,  # Initial value of the bar
width = 300L) # Width of the window
for (i in 1:length(df$"taxid")) {
df[i, "amr_fullname"]      <- mo_fullname     (df[i, "genus_species"])
df[i, "amr_phylum"]        <- mo_phylum       (df[i, "genus_species"])
df[i, "amr_family"]        <- mo_family       (df[i, "genus_species"])
df[i, "amr_pathogenicity"] <- mo_pathogenicity(df[i, "genus_species"])
df[i, "amr_gram_status"]   <- mo_gramstain    (df[i, "genus_species"])
pctg <- paste(round(i/length(df$"taxid") *100, 0), "% completed")
setWinProgressBar(pb, i, label = pctg) # The label will override the label set on the winProgressBar function
}
close(pb) # Close the connection
}
mo_fullname(fifty$genus_species)
mo_gramstain(ninety$genus_species)
to_run <- list(fifty, seventy, ninety)
for (df in to_run) {
# set progress bar information
pb <- winProgressBar(title = "AMR Loop Progress", # Window title
label = "Percentage completed", # Window label
min = 0,      # Minimum value of the bar
max = 3, # Maximum value of the bar
initial = 0,  # Initial value of the bar
width = 300L) # Width of the window
mutate(df, amr_fullname = mo_fullname     (df$genus_species))
mutate(df, amr_fullname = mo_phylum       (df$genus_species))
mutate(df, amr_fullname = mo_family       (df$genus_species))
mutate(df, amr_fullname = mo_pathogenicity(df$genus_species))
mutate(df, amr_fullname = mo_gramstain    (df$genus_species))
pctg <- paste(round(i/length(df$"taxid") *100, 0), "% completed")
setWinProgressBar(pb, i, label = pctg) # The label will override the label set on the winProgressBar function
close(pb) # Close the connection
}
View(fifty)
for (df in to_run) {
# set progress bar information
pb <- winProgressBar(title = "AMR Loop Progress", # Window title
label = "Percentage completed", # Window label
min = 0,      # Minimum value of the bar
max = 3, # Maximum value of the bar
initial = 0,  # Initial value of the bar
width = 300L) # Width of the window
df %>% mutate(amr_fullname = mo_fullname (df$genus_species))
mutate(df, amr_fullname = mo_phylum       (df$genus_species))
mutate(df, amr_fullname = mo_family       (df$genus_species))
mutate(df, amr_fullname = mo_pathogenicity(df$genus_species))
mutate(df, amr_fullname = mo_gramstain    (df$genus_species))
pctg <- paste(round(i/length(df$"taxid") *100, 0), "% completed")
setWinProgressBar(pb, i, label = pctg) # The label will override the label set on the winProgressBar function
close(pb) # Close the connection
}
to_run <- list(fifty, seventy, ninety)
for (df in to_run) {
# set progress bar information
pb <- winProgressBar(title = "AMR Loop Progress", # Window title
label = "Percentage completed", # Window label
min = 0,      # Minimum value of the bar
max = 3, # Maximum value of the bar
initial = 0,  # Initial value of the bar
width = 300L) # Width of the window
df %>% mutate(amr_fullname = mo_fullname (df$genus_species))
mutate(df, amr_fullname = mo_phylum       (df$genus_species))
mutate(df, amr_fullname = mo_family       (df$genus_species))
mutate(df, amr_fullname = mo_pathogenicity(df$genus_species))
mutate(df, amr_fullname = mo_gramstain    (df$genus_species))
pctg <- paste(round(i/length(df$"taxid") *100, 0), "% completed")
setWinProgressBar(pb, i, label = pctg) # The label will override the label set on the winProgressBar function
}
beep("mario")
close(pb) # Close the connection
to_run <- list(fifty, seventy, ninety)
for (df in to_run) {
df %>% mutate(amr_fullname = mo_fullname (df$genus_species))
mutate(df, amr_fullname = mo_phylum       (df$genus_species))
mutate(df, amr_fullname = mo_family       (df$genus_species))
mutate(df, amr_fullname = mo_pathogenicity(df$genus_species))
mutate(df, amr_fullname = mo_gramstain    (df$genus_species))
}
to_run <- list(fifty, seventy, ninety)
for (df in to_run) {
df %>% mutate(amr_fullname = mo_fullname (df$genus_species)) -> df
mutate(df, amr_fullname = mo_phylum       (df$genus_species))
mutate(df, amr_fullname = mo_family       (df$genus_species))
mutate(df, amr_fullname = mo_pathogenicity(df$genus_species))
mutate(df, amr_fullname = mo_gramstain    (df$genus_species))
}
fifty %>%
mutate(amr_fullname = mo_fullname     (df$genus_species)) %>%
mutate(amr_fullname = mo_phylum       (df$genus_species)) %>%
mutate(amr_fullname = mo_family       (df$genus_species)) %>%
mutate(amr_fullname = mo_pathogenicity(df$genus_species)) %>%
mutate(amr_fullname = mo_gramstain    (df$genus_species)) -> fifty
View(fifty)
# read in file with bacterial names
zero <- read_csv("0_percent.csv")
fifty <- read_csv("50_percent.csv")
seventy <- read_csv("70_percent.csv")
ninety <- read_csv("90_percent.csv")
# clean up genus/species column for running in AMR package
fifty %>%
select (-1) %>%
mutate (genus_species = str_replace(genus_species, ",", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\[", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]]", "")) -> fifty
seventy %>%
select (-1) %>%
mutate (genus_species = str_replace(genus_species, ",", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\[", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]]", "")) -> seventy
ninety %>%
select (-1) %>%
mutate (genus_species = str_replace(genus_species, ",", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\[", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]]", "")) -> ninety
fifty %>% slice_head(n=10) -> fifty
seventy %>% slice_head(n=10) -> seventy
ninety %>% slice_head(n=10) -> ninety
# AMR for information about each bacterial species
fifty %>%
mutate(amr_fullname      = mo_fullname     (df$genus_species)) %>%
mutate(amr_phylum        = mo_phylum       (df$genus_species)) %>%
mutate(amr_family        = mo_family       (df$genus_species)) %>%
mutate(amr_pathogenicity = mo_pathogenicity(df$genus_species)) %>%
mutate(amr_gram_status   = mo_gramstain    (df$genus_species)) -> fifty
seventy %>%
mutate(amr_fullname      = mo_fullname     (df$genus_species)) %>%
mutate(amr_phylum        = mo_phylum       (df$genus_species)) %>%
mutate(amr_family        = mo_family       (df$genus_species)) %>%
mutate(amr_pathogenicity = mo_pathogenicity(df$genus_species)) %>%
mutate(amr_gram_status   = mo_gramstain    (df$genus_species)) -> seventy
ninety %>%
mutate(amr_fullname      = mo_fullname     (df$genus_species)) %>%
mutate(amr_phylum        = mo_phylum       (df$genus_species)) %>%
mutate(amr_family        = mo_family       (df$genus_species)) %>%
mutate(amr_pathogenicity = mo_pathogenicity(df$genus_species)) %>%
mutate(amr_gram_status   = mo_gramstain    (df$genus_species)) -> ninety
View(ninety)
# read in file with bacterial names
zero <- read_csv("0_percent.csv")
fifty <- read_csv("50_percent.csv")
seventy <- read_csv("70_percent.csv")
ninety <- read_csv("90_percent.csv")
# clean up genus/species column for running in AMR package
fifty %>%
select (-1) %>%
mutate (genus_species = str_replace(genus_species, ",", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\[", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]]", "")) -> fifty
seventy %>%
select (-1) %>%
mutate (genus_species = str_replace(genus_species, ",", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\[", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]]", "")) -> seventy
ninety %>%
select (-1) %>%
mutate (genus_species = str_replace(genus_species, ",", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\[", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]]", "")) -> ninety
# AMR for information about each bacterial species
fifty %>%
mutate(amr_fullname      = mo_fullname     (df$genus_species)) %>%
mutate(amr_phylum        = mo_phylum       (df$genus_species)) %>%
mutate(amr_family        = mo_family       (df$genus_species)) %>%
mutate(amr_pathogenicity = mo_pathogenicity(df$genus_species)) %>%
mutate(amr_gram_status   = mo_gramstain    (df$genus_species)) -> fifty
# read in file with bacterial names
zero <- read_csv("0_percent.csv")
fifty <- read_csv("50_percent.csv")
seventy <- read_csv("70_percent.csv")
ninety <- read_csv("90_percent.csv")
# clean up genus/species column for running in AMR package
fifty %>%
select (-1) %>%
mutate (genus_species = str_replace(genus_species, ",", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\[", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]]", "")) -> fifty
seventy %>%
select (-1) %>%
mutate (genus_species = str_replace(genus_species, ",", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\[", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]]", "")) -> seventy
ninety %>%
select (-1) %>%
mutate (genus_species = str_replace(genus_species, ",", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\[", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]]", "")) -> ninety
fifty %>%
mutate(amr_fullname      = mo_fullname     (df$genus_species)) %>%
mutate(amr_phylum        = mo_phylum       (df$genus_species)) %>%
mutate(amr_family        = mo_family       (df$genus_species)) %>%
mutate(amr_pathogenicity = mo_pathogenicity(df$genus_species)) %>%
mutate(amr_gram_status   = mo_gramstain    (df$genus_species)) -> fifty
View(fifty)
fifty %>%
mutate(amr_fullname = NA_character_) %>%
mutate(amr_phylum = NA_character_) %>%
mutate(amr_family = NA_character_) %>%
mutate(amr_pathogenicity = NA_character_) %>%
mutate(amr_gram_status = NA_character_) %>%
mutate(amr_fullname      = mo_fullname     (df$genus_species)) %>%
mutate(amr_phylum        = mo_phylum       (df$genus_species)) %>%
mutate(amr_family        = mo_family       (df$genus_species)) %>%
mutate(amr_pathogenicity = mo_pathogenicity(df$genus_species)) %>%
mutate(amr_gram_status   = mo_gramstain    (df$genus_species)) -> fifty
fifty %>%
mutate(amr_fullname = NA_character_) %>%
mutate(amr_phylum = NA_character_) %>%
mutate(amr_family = NA_character_) %>%
mutate(amr_pathogenicity = NA_character_) %>%
mutate(amr_gram_status = NA_character_)
fifty %>%
mutate(amr_fullname = NA_character_) %>%
mutate(amr_phylum = NA_character_) %>%
mutate(amr_family = NA_character_) %>%
mutate(amr_pathogenicity = NA_character_) %>%
mutate(amr_gram_status = NA_character_) %>%
mutate(amr_fullname      = mo_fullname     (df$genus_species))
# read in file with bacterial names
zero <- read_csv("0_percent.csv")
fifty <- read_csv("50_percent.csv")
seventy <- read_csv("70_percent.csv")
ninety <- read_csv("90_percent.csv")
# clean up genus/species column for running in AMR package
fifty %>%
select (-1) %>%
mutate (genus_species = str_replace(genus_species, ",", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\[", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]]", "")) -> fifty
seventy %>%
select (-1) %>%
mutate (genus_species = str_replace(genus_species, ",", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\[", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]]", "")) -> seventy
ninety %>%
select (-1) %>%
mutate (genus_species = str_replace(genus_species, ",", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\[", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species = str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]]", "")) -> ninety
fifty %>%
mutate(amr_fullname      = mo_fullname     (fifty$genus_species)) %>%
mutate(amr_phylum        = mo_phylum       (fifty$genus_species)) %>%
mutate(amr_family        = mo_family       (fifty$genus_species)) %>%
mutate(amr_pathogenicity = mo_pathogenicity(fifty$genus_species)) %>%
mutate(amr_gram_status   = mo_gramstain    (fifty$genus_species)) -> fifty
View(fifty)
View(zero)
View(seventy)
View(ninety)
View(fifty)
zero <- read_csv("0_percent.csv")
fifty <- read_csv("50_percent.csv")
seventy <- read_csv("70_percent.csv")
ninety <- read_csv("90_percent.csv")
# clean up genus/species column for running in AMR package
cleaner_func <- function(df) {
df %>%
select (-1) %>%
mutate (genus_species := str_replace(genus_species, ",", "")) %>%
mutate (genus_species := str_replace(genus_species, "\\[", "")) %>%
mutate (genus_species := str_replace(genus_species, "\\]", "")) %>%
mutate (genus_species := str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species := str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species := str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]]", "")) -> df
}
cleaner_func(zero)
View(zero)
cleaner_func <- function(df) {
df %>%
select (-1) %>%
mutate (genus_species := str_replace(genus_species, ",", "")) %>%
mutate (genus_species := str_replace(genus_species, "\\[", "")) %>%
mutate (genus_species := str_replace(genus_species, "\\]", "")) %>%
mutate (genus_species := str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species := str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species := str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]]", "")) -> df
}
cleaner_func(zero)
cleaner_func(fifty)
cleaner_func(seventy)
cleaner_func(ninety)
View(fifty)
cleaner_func <- function(df) {
df %>%
select (-1) %>%
mutate (genus_species := str_replace(genus_species, ",", "")) %>%
mutate (genus_species := str_replace(genus_species, "\\[", "")) %>%
mutate (genus_species := str_replace(genus_species, "\\]", "")) %>%
mutate (genus_species := str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species := str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species := str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]]", ""))
}
cleaner_func(zero) -> zero
View(zero)
AMR_caller <- function (df) {
df %>%
mutate(amr_fullname      := mo_fullname     (df$genus_species)) %>%
mutate(amr_phylum        := mo_phylum       (df$genus_species)) %>%
mutate(amr_family        := mo_family       (df$genus_species)) %>%
mutate(amr_pathogenicity := mo_pathogenicity(df$genus_species)) %>%
mutate(amr_gram_status   := mo_gramstain    (df$genus_species))
}
AMR_caller(zero) -> zero
View(zero)
# read in file with bacterial names
zero <- read_csv("0_percent.csv")
fifty <- read_csv("50_percent.csv")
seventy <- read_csv("70_percent.csv")
ninety <- read_csv("90_percent.csv")
# clean up genus/species column for running in AMR package
cleaner_func <- function(df) {
df %>%
select (-1) %>%
mutate (genus_species := str_replace(genus_species, ",", "")) %>%
mutate (genus_species := str_replace(genus_species, "\\[", "")) %>%
mutate (genus_species := str_replace(genus_species, "\\]", "")) %>%
mutate (genus_species := str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species := str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]][[:graph:]]", "")) %>%
mutate (genus_species := str_replace(genus_species, "\\/[[:graph:]][[:graph:]][[:graph:]]", ""))
}
cleaner_func(zero) -> zero
cleaner_func(fifty) -> fifty
cleaner_func(seventy) -> seventy
cleaner_func(ninety) -> ninety
# AMR for information about each bacterial species
AMR_caller <- function (df) {
df %>%
mutate(amr_fullname      := mo_fullname     (df$genus_species)) %>%
mutate(amr_phylum        := mo_phylum       (df$genus_species)) %>%
mutate(amr_family        := mo_family       (df$genus_species)) %>%
mutate(amr_pathogenicity := mo_pathogenicity(df$genus_species)) %>%
mutate(amr_gram_status   := mo_gramstain    (df$genus_species))
}
AMR_caller(zero) -> zero
AMR_caller(fifty) -> fifty
AMR_caller(seventy) -> seventy
AMR_caller(ninety) -> ninety
write_csv(zero, "0_percent_info.csv")
write_csv(fifty, "50_percent_info.csv")
write_csv(seventy, "70_percent_info.csv")
write_csv(ninety, "90_percent_info.csv")
